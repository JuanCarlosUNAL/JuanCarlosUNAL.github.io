{"componentChunkName":"component---src-blog-entries-blog-template-tsx","path":"/es/wltw/seq2seq-cross-validation","result":{"data":{"allMdx":{"nodes":[{"slug":"blog-entries/es/seq2seq-cross-validation","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Validación cruzada en modelos secuenciales\",\n  \"created\": \"2021-05-13T00:00:00.000Z\",\n  \"updated\": \"2021-05-13T00:00:00.000Z\",\n  \"lang\": \"es\",\n  \"tags\": \"ML, machine learning, validation, cross validation, k-fold, sequences, seq2seq\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Primero algo de contexto\"), mdx(\"p\", null, \"En los ultimos dias he estado colaborando con un proyecto de etiquetado de entidades, tenemos un modelo tentativo y ahora requerimos validar dicho modelo con cross validation\"), mdx(\"h2\", null, \"Validation Cruzada\"), mdx(\"p\", null, \"En un principio el dataset es dividido en 3 partes. test, valijaci\\xF3n y entrenamiento. Sin embargo esto deja el conjunto de entrenamiento un poco reducido y un conjunto de validaci\\xF3n sesgado, que se comporte bien para alguna clase y con datos erroneos del performance del modelo.\"), mdx(\"p\", null, \"Validacion cruzada o Cross validation en ingl\\xE9s. Es una tectnica para evaluar el comportamiento de un modelo aprovechando al maximo el dataset de entrenamiento y de validaci\\xF3n.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"../files/cross_validation.png\",\n    \"alt\": \"cross validation\"\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Escojemos un numero k que indica el numero de iteraciones y la cantidad de diviciones del conjunto.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Estas subdiviciones tendran doble funcion, como entrenamiento y validacion.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Usamos uno de los fold como validaci\\xF3n y los restantes como training\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Iteramos usando una subdivicion distinata como testing cada vez.\")), mdx(\"h3\", null, \"Problematica\"), mdx(\"p\", null, \"El caso anterior funciona muy bien para modelos donde el resultado actual es independiente de los resultado anteriores o siguientes, sin embargo para modelos secuenciales que normalmente dependen de antriores estados resulta problematico dividir el dataset de esta manera ya que se pierde la informaci\\xF3n.\"), mdx(\"h2\", null, \"Solucion\"), mdx(\"p\", null, \"Para solventar este problema hay dos aproximaciones\"), mdx(\"h3\", null, \"Validacion cruzada en series de timepo\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"../files/cross_validation_time_series.png\",\n    \"alt\": \"cross validation\"\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Igual que la validacion cruzada escogemos un \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"k\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Escogemos los \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"n\"), \" primeras diviciones para entrenamiento y la siguiente es la de validacion\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Iteramos y avanzamos la divicion de validacion en las diviciones restantes.\")), mdx(\"p\", null, \"De esta manera no se rompe la estructura secuancial de nuestro conjunto de datos. Sin embargo es notable que la ultima iteraci\\xF3n tendra mas entrenamiento por tanto un mejor performace.\"), mdx(\"h3\", null, \"Validaci\\xF3n cruzada en bloques de series de tiempo\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"../files/cv_block_time_series.png\",\n    \"alt\": \"cross validation\"\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Escogemos $k$ diviciones\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"de cada una de estas diviciones seleccionamos una porcion para entrenamiento y otra para testign\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Validación cruzada en modelos secuenciales"}}]}},"pageContext":{"pattern":"//seq2seq-cross-validation/","language":"es","intl":{"language":"es","languages":["en","es"],"messages":{"home-picture-alt":"Foto de perfil","home-github-tooltip":"Sigueme en github","home-linkedin-tooltip":"Hechale un vistaso a mi linkedIn","home-email-tooltip":"Enviame un correo","home-blog-tooltip":"Qué aprendí esta semana?","blog-title":"Qué aprendí esta semana?","blog-sub":"Explora los posts para ver que he aprendido"},"routed":true,"originalPath":"/wltw/seq2seq-cross-validation","redirect":true,"redirectDefaultLanguageToRoot":false,"defaultLanguage":"en","ignoredPaths":["/wltw/.+/"]}}},"staticQueryHashes":[]}